## ターミナルマルチプレクサ tmux をカスタマイズする - Qiita
## http://qiita.com/b4b4r07/items/01359e8a3066d1c37edc
## https://github.com/b4b4r07/dotfiles/blob/master/.tmux.conf

# General {{{1
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh
set-option -s escape-time 0

set-option -g prefix C-t
bind-key C-t send-prefix
unbind-key C-b

# Keep the window's name fixed
# cf. http://blog.yagni.jp/archives/498 (in japanese)
# cf. http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set-option -g allow-rename off

# System window by supported OS
set-option -g set-titles on
set-option -g set-titles-string "[tmux] #T @ #H"

# Enable clipboard
#set-option -g default-command \
#'which reattach-to-user-namespace >/dev/null 2>&1 && \
#reattach-to-user-namespace -l bash || bash'

# Display time
set-option -g display-time 3500

# Operations {{{1
## Clients {{{2
# Switch clients
bind-key N switch-client -n
bind-key P switch-client -p

## Window {{{2

# Start window index 1 origin
set-option -g base-index 1

# Split window
bind-key | split-window -h

# Vertical split window
bind-key - split-window -v

# Change active window
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

## Pane {{{2

# Start pane index 1 origin
set-window-option -g pane-base-index 1

# Resize pane
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Change active pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Rotate active pane
bind-key -n C-o run "tmux select-pane -l || tmux select-pane -t :.+"

# Break or kill pane
bind-key b break-pane
bind-key q kill-pane
#bind-key C-k display-panes\; kill-pane\;
#bind-key C-k display-panes\; confirm-before kill-pane\;
bind-key C-x run "tmux kill-pane || tmux kill-window"
bind-key C-t run "tmux last-pane || tmux last-window || tmux new-window"

# Display pane
bind-key i display-panes

# Key-bindings {{{1

# Reload config file
bind-key r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"
bind-key C-r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"

# Look up in a web dictionary
bind-key g command-prompt -p "Google Translate en->ja:" "split-window 'source ~/.zshrc >/dev/null; gte %% | less'"
bind-key G command-prompt -p "Google Translate ja->en:" "split-window 'source ~/.zshrc >/dev/null; gtj %% | less'"

# Look up in a man-page
bind-key m command-prompt -p "Man:" "split-window 'man %%'"
# Less some files with syntax highlight
bind-key M command-prompt -p "Less:" "split-window 'which richpager && richpager -l %%'"

# Appearance {{{1

# Status-position to move the status line to the top of the screen
# available on tmux -V 1.7
# cf. http://sourceforge.net/projects/tmux/files/tmux/tmux-1.7/
set-option -g status-position top


set-option -g default-terminal "screen-256color"
set-option -g pane-active-border-bg colour235

## Customize statusline {{{2

# Length left
set-option -g status-left-length 90
set-option -g status-right-length 90

# Contents left
#set-option -g status-left '#H:[#P]'
set-option -g status-left 'tmux:[#P]'

# Contents right
#set-option -g status-right "#(tmux show-options -g prefix) [%Y-%m-%d(%a) %H:%M]"
#if "type battery.sh" "set -g status-right '#(tmux show-options -g prefix) #(battery.sh -t) [%Y-%m-%d(%a) %H:%M]'"
#if "which battery.sh" "set -g status-right '#(which get_ssid.sh >/dev/null && get_ssid.sh) #(battery.sh) [%Y-%m-%d(%a) %H:%M]'"

#set-option -g status-right '#(which get_ssid.sh >/dev/null && get_ssid.sh) #(which battery.sh >/dev/null && battery.sh -c tmux) [%Y-%m-%d(%a) %H:%M]'
#set-option -g status-right '#(get_ssid) #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'
#set-option -g status-right '#[fg=white]#(wifi)#[default] #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'
set-option -g status-right '#[default] #(battery -c tmux) [%Y-%m-%d(%a) %H:%M]'

# Enable utf-8 on statusbar
set-option -g status-utf8 on

# Reload statusbar
#set-option -g status-interval 1
set-option -g status-interval 60

# Centerize
set-option -g status-justify centre

# Enable visual notification
set-window-option -g monitor-activity on

# Enable visual notification
set-option -g visual-activity on

# Enable statusbar top
set-option -g status-position top
#}}}

## Colorscheme: Solarized {{{2

# Default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# Message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green
#}}}

# Copy-mode {{{1
set-window-option -g mode-keys vi

bind-key v copy-mode \; display "Copy mode!"
bind-key C-v copy-mode \; display "Copy mode!"
bind-key C-t copy-mode \; display "Copy mode!"

bind-key p paste-buffer
# Make pbcopy/pbpaste and Vim's * register work.
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind-key -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy C-c cancel
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy C-a start-of-line
bind-key -t vi-copy C-e end-of-line
bind-key -t vi-copy w next-word
bind-key -t vi-copy e next-word-end
bind-key -t vi-copy b previous-word
bind-key -t vi-copy g top-line
bind-key -t vi-copy G bottom-line
#bind-key -t vi-copy Space next-space
bind-key -t vi-copy / search-forward
bind-key -t vi-copy ? search-backward
bind-key -t vi-copy C-n page-up
bind-key -t vi-copy C-f page-down
bind-key -t vi-copy C-u scroll-up
bind-key -t vi-copy C-d scroll-down

#bind-key -t vi-copy Y copy-line
unbind-key Space
#bind-key -t vi-copy Space begin-selection \; end-of-line
#bind-key -t vi-copy V copy-end-of-line
bind-key -t vi-copy V select-line
#bind-key -t vi-copy V copy-end-of-line


#### My .tmux.conf
### 操作
# マウス操作を有効にする
set -g mouse on
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

### 表示
# ウィンドウ履歴の最大行数
set-option -g history-limit 10000
# ステータスバーの現ウィンドウにアンダーバーを付ける
setw -g window-status-current-attr underscore
